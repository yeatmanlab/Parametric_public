geom_ribbon(aes(ymin=y_lower, ymax=y_upper, fill=wj_brs), alpha=0.2, size=0) +
scale_x_continuous(labels=as.character, breaks=seq(1, 7)) +
scale_y_continuous(labels=scales::percent, breaks=seq(0, 1, by=0.25)) +
scale_colour_gradientn(colours=cmap) +
scale_fill_gradientn(colours=cmap) +
theme_bw() +
theme(text=element_text(size=12, colour="black", family="Open Sans"),
strip.text.x=element_text(face="bold", colour="white"),
strip.text.y=element_text(face="plain", size=10),
strip.placement="outside", panel.grid.minor=element_blank()) +
labs(title="", colour="WJ-BRS", fill="WJ-BRS") +
xlab("duration step") + ylab("") +
facet_grid(duration ~ group, labeller=duration_labeller, switch="y")
## HACK INTO THE GUTS OF GGPLOT TO SET INDIVIDUAL STRIP COLORS
gtable <- ggplotGrob(fig)
strip_ix <- grep(pattern="strip-", gtable$layout$name)
for (i in strip_ix) {
lab <- gtable$grobs[[i]]$grobs[[1]]$children[[2]]$children[[1]]$label
col <- unname(group_cols[lab])
if (!is.na(col)) {
gtable$grobs[[i]]$grobs[[1]]$children[[1]]$gp$fill <- col
} else {
gtable$grobs[[i]]$grobs[[1]]$children[[1]]$gp$fill <- NA
gtable$grobs[[i]]$grobs[[1]]$children[[1]]$gp$col <- NA
}
}
## PLOT IT INTERACTIVELY
grid::grid.draw(gtable)
## SAVE TO FILE
setwd('./Analysis/Figures')
ggsave("figure_individ_and_mean_fitted_models_by_group.pdf", gtable,
device=cairo_pdf, width=7.5, height=4.5)
ggsave("figure_individ_and_mean_fitted_models_by_group.png", gtable,
width=7.5, height=4.5, dpi = 300)
library(tidyr)
library(dplyr)
library(ggplot2)
library(lme4)
library(pbkrtest)
rm(list = ls())
getwd()
setwd("../../")
ls
getwd()
setwd("../Motion/Exp/Data")
params <- read.csv("HDDM_Fit.csv")
params <- read.csv("HDDM_Fit_Reg.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
View(params)
View(vars)
params <- read.csv("HDDM_Fit.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("t",parameter), "t",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("v", parameter), "v",
ifelse(grepl("a", parameter), "a", "other")))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
params <- spread(params, parameter, mean)
bio <- read.csv("All_Subjects_Motion_Data.csv")
bio[c("X","trial","stim","direction","response","rt","block")] <- NULL
bio <- unique( bio[ , 1:length(bio) ] )
out <- merge(params, bio, by = "subj_idx")
my_breaks = c(6, 12, 24, 48, 100)
out <- subset(out, wj_brs != "NA")
px1 <- ggplot(subset(out, level != "NA"), aes(wj_brs, v, colour = level)) +
geom_point(size = 2)+
#geom_line(aes(group = level)) +
geom_smooth(aes(group = level), method = lm, se = FALSE) +
scale_color_gradient(name = "Coherence", trans = "log",
breaks = my_breaks, my_breaks)+
xlab("WJ BRS") +
ylab("Drift Rate (v)")+
ggtitle("Reading ability versus\nrate of evidence accumulation")+
theme_bw()+
theme(axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
px1
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))+
scale_x_log10()
params <- read.csv("HDDM_Fit_Reg.csv")
View(params)
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
View(params)
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("t",parameter), "t",
ifelse(grepl("sv", parameter), "sv",
ifelse(grel("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("v_Int", parameter), "v_intercept",
ifelse(grepl("a", parameter), "a", "other")))))))
params <- mutate(params, class = ifelse(grepl("t",parameter), "t",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("v_Int", parameter), "v_intercept",
ifelse(grepl("a", parameter), "a", "other")))))))
View(params)
params <- mutate(params, class = ifelse(grepl("t_",parameter), "t",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("v_Int", parameter), "v_intercept",
ifelse(grepl("a", parameter), "a", "other")))))))
View(params)
params <- mutate(params, class = ifelse(grepl("v_Int",parameter), "v_Int",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("t", parameter), "t",
ifelse(grepl("a", parameter), "a", "other")))))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
params <- spread(params, parameter, mean)
bio <- read.csv("All_Subjects_Motion_Data.csv")
bio[c("X","trial","stim","direction","response","rt","block")] <- NULL
bio <- unique( bio[ , 1:length(bio) ] )
out <- merge(params, bio, by = "subj_idx")
my_breaks = c(6, 12, 24, 48, 100)
out <- subset(out, wj_brs != "NA")
px1 <- ggplot(subset(out, level != "NA"), aes(wj_brs, v, colour = level)) +
geom_point(size = 2)+
#geom_line(aes(group = level)) +
geom_smooth(aes(group = level), method = lm, se = FALSE) +
scale_color_gradient(name = "Coherence", trans = "log",
breaks = my_breaks, my_breaks)+
xlab("WJ BRS") +
ylab("Drift Rate (v)")+
ggtitle("Reading ability versus\nrate of evidence accumulation")+
theme_bw()+
theme(axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
px1
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))+
scale_x_log10()
View(out)
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, v_Int))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
lmfit <- lm(v_stim ~ wj_brs, out)
summary(lmfit)
ggplot(out, aes(wj_brs, sv))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, sz))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, t))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, a))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
log10(0.06)
log10(0.12)
log10(0.24)
(-0.9208) - (-1.221849)
log2(0.06)
log2(0.12)
log2(0.24)
log2(0.48)
log2(1)
log2(48)
subject_ids <- c("GB208","GB240","GB241","HC896",
"IB754","JC876","JC897","KB749","LC903",
"KB509","IC880")
df <- data.frame()
for (i in 1:length(subject_ids)){
filename <- paste0("Motion_Data_", subject_ids[i], ".csv")
df_tmp <- read.csv(filename)
df <- rbind(df, df_tmp[])
}
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00) %>%
filter(mean_response < 0.7)
df <- filter(df, !(subj_idx %in% excl_list$subj_idx ))
df$stim <- df$stim*100
df = as.data.frame(sapply(df, toupper))
df$subj_idx <- gsub("GB240", "HB240",df$subj_idx )
df$subj_idx <- gsub("GB241", "KB241",df$subj_idx )
repository_df <- read.csv("../../../RDRPRepository_DATA_2018-04-02_1648.csv")
registry_df <- read.csv("../../../RDRPRegistry_DATA_2018-04_02_1647.csv")
registry_df <- read.csv("../../../RDRPRegistry_DATA_2018-04-02_1647.csv")
demog_df <- merge(repository_df, registry_df, by = "record_id")
record_ids <- demog_df %>% filter(sid.x %in% df$subj_idx) %>% select(record_id)
subject_df <- demog_df %>% filter(record_id %in% record_ids$record_id)
names <- colnames(demog_df)
wj_cols <- c("wj_brs","wj_wa_ss","wj_lwid_ss")
ctopp_cols <- c("ctopp_pa","ctopp_rapid","ctopp_pm")
twre_cols <- c("twre_index","twre_pde_ss","twre_swe_ss")
wasi_cols <- c("wasi_fs2", "wasi_mr_ts")
reading_columns <- c("record_id", "dys_dx", "adhd_dx", "brain_injury", "aud_dis",
"psych_dx", wj_cols, ctopp_cols, twre_cols, wasi_cols)
reading_df <- subject_df %>% select(reading_columns)
reading_df <- reading_df[!duplicated(reading_df),]
reading_df <- reading_df %>% group_by(record_id) %>%
summarise_all(funs(mean(as.numeric(.), na.rm=TRUE)))
bio_df <- subject_df[c("sid.x", "dob", "record_id")]
bio_df[bio_df==""] <- NA
bio_df <- na.omit(bio_df)
bio_df$dob <- as.POSIXct(bio_df$dob, format="%Y-%m-%d")
colnames(bio_df)[colnames(bio_df) == "sid.x"] <- "subj_idx"
use_df <- merge(bio_df, df)
use_df <- merge(use_df, reading_df, by = "record_id")
use_df$group <- with(use_df, ifelse(wj_brs <= 85 & twre_index <= 85, "Dyslexic",
ifelse(wj_brs >= 100 & twre_index >= 100, "Above Average",
"Below Average")))
use_df <- use_df %>%
filter(psych_date >= "2017-08-15") %>%  # date the exp. was finalized
filter(age_at_testing >= 8) %>%         # min. age
filter(age_at_testing < 13) %>%         # max. age
filter(aud_dis == 0) %>%                # no auditory disorder
filter(wasi_fs2 >= 80)           # WASI criterion
use_df <- use_df %>%
#filter(psych_date >= "2017-08-15") %>%  # date the exp. was finalized
filter(age_at_testing >= 8) %>%         # min. age
filter(age_at_testing < 13) %>%         # max. age
filter(aud_dis == 0) %>%                # no auditory disorder
filter(wasi_fs2 >= 80)           # WASI criterion
use_df <- use_df %>%
#filter(psych_date >= "2017-08-15") %>%  # date the exp. was finalized
#filter(age_at_testing >= 8) %>%         # min. age
#filter(age_at_testing < 13) %>%         # max. age
filter(aud_dis == 0) %>%                # no auditory disorder
filter(wasi_fs2 >= 80)           # WASI criterion
use_df$group <- with(use_df, ifelse(wj_brs <= 85 & twre_index <= 85, "Dyslexic",
ifelse(wj_brs >= 100 & twre_index >= 100, "Above Average",
"Below Average")))
write.csv(use_df, "All_Subjects_Motion_Data.csv")
unique(use_df$subj_idx)
params
params <- read.csv("HDDM_Fit_Reg.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("v_Int",parameter), "v_Int",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("t", parameter), "t",
ifelse(grepl("a", parameter), "a", "other")))))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
params <- spread(params, parameter, mean)
bio <- read.csv("All_Subjects_Motion_Data.csv")
bio[c("X","trial","stim","direction","response","rt","block")] <- NULL
bio <- unique( bio[ , 1:length(bio) ] )
out <- merge(params, bio, by = "subj_idx")
my_breaks = c(6, 12, 24, 48, 100)
out <- subset(out, wj_brs != "NA")
px1 <- ggplot(subset(out, level != "NA"), aes(wj_brs, v, colour = level)) +
geom_point(size = 2)+
#geom_line(aes(group = level)) +
geom_smooth(aes(group = level), method = lm, se = FALSE) +
scale_color_gradient(name = "Coherence", trans = "log",
breaks = my_breaks, my_breaks)+
xlab("WJ BRS") +
ylab("Drift Rate (v)")+
ggtitle("Reading ability versus\nrate of evidence accumulation")+
theme_bw()+
theme(axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
px1
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))+
scale_x_log10()
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))+
scale_x_log10()
ggplot(subset(out, level!="NA"), aes(level, v)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
View(out)
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(subset(out, level!="NA"), aes(level, v_int)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(subset(out, level!="NA"), aes(level, v_Int)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
lmfit <- lm(v_stim ~ wj_brs, out)
summary(lmfit)
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)+
scale_y_log10()
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
params <- read.csv("HDDM_Fit_Reg.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("v_Int",parameter), "v_Int",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("t", parameter), "t",
ifelse(grepl("a", parameter), "a", "other")))))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
params <- spread(params, parameter, mean)
bio <- read.csv("All_Subjects_Motion_Data.csv")
bio[c("X","trial","stim","direction","response","rt","block")] <- NULL
bio <- unique( bio[ , 1:length(bio) ] )
out <- merge(params, bio, by = "subj_idx")
my_breaks = c(6, 12, 24, 48, 100)
out <- subset(out, wj_brs != "NA")
px1 <- ggplot(subset(out, level != "NA"), aes(wj_brs, v, colour = level)) +
geom_point(size = 2)+
#geom_line(aes(group = level)) +
geom_smooth(aes(group = level), method = lm, se = FALSE) +
scale_color_gradient(name = "Coherence", trans = "log",
breaks = my_breaks, my_breaks)+
xlab("WJ BRS") +
ylab("Drift Rate (v)")+
ggtitle("Reading ability versus\nrate of evidence accumulation")+
theme_bw()+
theme(axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
px1
ggplot(subset(out, level!="NA"), aes(level, v_Int)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
View(bio)
params <- read.csv("HDDM_Fit_Reg.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("v_Int",parameter), "v_Int",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("t", parameter), "t",
ifelse(grepl("a", parameter), "a", "other")))))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
params <- spread(params, parameter, mean)
bio <- read.csv("All_Subjects_Motion_Data.csv")
bio[c("X","trial","stim","direction","response","rt","block")] <- NULL
bio <- unique( bio[ , 1:length(bio) ] )
out <- merge(params, bio, by = "subj_idx")
my_breaks = c(6, 12, 24, 48, 100)
out <- subset(out, wj_brs != "NA")
px1 <- ggplot(subset(out, level != "NA"), aes(wj_brs, v, colour = level)) +
geom_point(size = 2)+
#geom_line(aes(group = level)) +
geom_smooth(aes(group = level), method = lm, se = FALSE) +
scale_color_gradient(name = "Coherence", trans = "log",
breaks = my_breaks, my_breaks)+
xlab("WJ BRS") +
ylab("Drift Rate (v)")+
ggtitle("Reading ability versus\nrate of evidence accumulation")+
theme_bw()+
theme(axis.title = element_text(size = 18, face = "bold"),
axis.text = element_text(size = 16),
plot.title = element_text(size = 20),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
px1
ggplot(subset(out, level!="NA"), aes(level, v_Int)) +
geom_point(size = 2)+
geom_line(aes(group = subj_idx))
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
lmfit <- lm(v_stim ~ wj_brs, out)
summary(lmfit)
ggplot(out, aes(wj_brs, v_Int))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
2018-2006
subject_ids <- c("GB208","GB240","GB241","HC896",
"IB754","JC876","JC897","KB749","LC903",
"KB509","IC880")
df <- data.frame()
for (i in 1:length(subject_ids)){
filename <- paste0("Motion_Data_", subject_ids[i], ".csv")
df_tmp <- read.csv(filename)
df <- rbind(df, df_tmp[])
}
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00) %>%
filter(mean_response < 0.7)
df <- filter(df, !(subj_idx %in% excl_list$subj_idx ))
df$stim <- df$stim*100
df = as.data.frame(sapply(df, toupper))
df$subj_idx <- gsub("GB240", "HB240",df$subj_idx )
df$subj_idx <- gsub("GB241", "KB241",df$subj_idx )
View(excl_list)
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00)
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00)
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00) %>%
filter(mean_response < 0.7)
df <- data.frame()
for (i in 1:length(subject_ids)){
filename <- paste0("Motion_Data_", subject_ids[i], ".csv")
df_tmp <- read.csv(filename)
df <- rbind(df, df_tmp[])
}
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00) %>%
filter(mean_response < 0.7)
excl_list <- df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 1.00)
lmfit <- lm(v_stim ~ wj_brs, out)
summary(lmfit)
ggplot(out, aes(wj_brs, v_Int))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, sv))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, sz))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, t))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
ggplot(out, aes(wj_brs, a))+
geom_point()+
geom_smooth(method = lm, se=FALSE)
